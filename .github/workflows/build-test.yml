name: build-test

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-cache-${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            node-cache-${{ runner.os }}-modules-

      - name: Cache dist files
        uses: actions/cache@v2
        with:
          path: dist
          key: cache-dist-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            cache-dist-${{ hashFiles('yarn.lock') }}-

      - run: yarn --frozen-lockfile --ignore-scripts --prefer-offline
      - run: git fetch --no-tags --prune --depth=5 origin main
      - run: yarn nx codegen api # Generate Prisma first
      - run: yarn nx run-many --target codegen --all
      - run: yarn nx affected --target test --base origin/main --parallel
      - run: yarn nx affected --target lint --base origin/main --parallel
      - run: yarn nx run-many --target build --all --prod --parallel

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-cache-${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            node-cache-${{ runner.os }}-modules-

      - name: Cache dist files
        uses: actions/cache@v2
        with:
          path: dist
          key: cache-dist-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            cache-dist-${{ hashFiles('yarn.lock') }}-

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: false
          tags: caster-api:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
