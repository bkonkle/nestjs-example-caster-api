name: build-test

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Cache dist files
        uses: actions/cache@v2
        with:
          path: dist
          key: cache-dist-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            cache-dist-${{ hashFiles('yarn.lock') }}-

      - run: yarn --frozen-lockfile --ignore-scripts --prefer-offline
      - run: git fetch --no-tags --prune --depth=1 origin main
      - run: yarn nx codegen api # Generate Prisma first
      - run: yarn nx run-many --target codegen --all
      - run: yarn nx affected --target test --base origin/main --parallel
      - run: yarn nx affected --target lint --base origin/main --parallel
      - run: yarn nx affected --target build --base origin/main --prod --parallel

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Cache dist files
        uses: actions/cache@v2
        with:
          path: dist
          key: cache-dist-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            cache-dist-${{ hashFiles('yarn.lock') }}-

      - run: yarn nx package api
